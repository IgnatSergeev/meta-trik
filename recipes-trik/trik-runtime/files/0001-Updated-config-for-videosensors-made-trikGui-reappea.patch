From c6627e6652b604685561a3cdf5b5ffe86b6907f0 Mon Sep 17 00:00:00 2001
From: Yurii Litvinov <yurii.litvinov@gmail.com>
Date: Thu, 16 Oct 2014 18:54:15 +0400
Subject: [PATCH 1/1] Updated config for videosensors, made trikGui reappear
 if it was cluttered

---
 trikControl/config.xml         |    4 ++--
 trikControl/config_capture.xml |    2 +-
 trikGui/trikGuiApplication.cpp |   20 +++++++++++++++-----
 trikGui/trikGuiApplication.h   |   15 +++++++++++----
 4 files changed, 29 insertions(+), 12 deletions(-)

diff --git a/trikControl/config.xml b/trikControl/config.xml
index 4fdceea..9d64a24 100644
--- a/trikControl/config.xml
+++ b/trikControl/config.xml
@@ -205,13 +205,13 @@ Use it if JCx ports are configured to work as PWM signal generators.
 	<i2c path="/dev/i2c-2" deviceId="0x48" />
 
 	<!-- Settings for virtual camera line sensor. -->
-	<lineSensor script="/etc/init.d/line-sensor-ov7670.sh" inputFile="/run/line-sensor-ov7670.in.fifo" outputFile="/run/line-sensor-ov7670.out.fifo" toleranceFactor="1.0" disabled="false" />
+	<lineSensor script="/etc/init.d/line-sensor-ov7670.sh" inputFile="/run/line-sensor.in.fifo" outputFile="/run/line-sensor.out.fifo" toleranceFactor="1.0" disabled="false" />
 
 	<!-- Settings for virtual camera object detector sensor. -->
 	<objectSensor script="/etc/init.d/object-sensor-ov7670.sh" inputFile="/run/object-sensor.in.fifo" outputFile="/run/object-sensor.out.fifo" toleranceFactor="1.0" disabled="false" />
 
 	<!-- Settings for virtual camera MxN color sensor. It splits field of view of a camera into MxN grid and reports dominant color in each cell of a grid. -->
-	<colorSensor script="/etc/init.d/mxn-sensor-0v7670.sh" inputFile="/run/mxn-sensor.in.fifo" outputFile="/run/mxn-sensor.out.fifo" m="3" n="3" disabled="false" />
+	<colorSensor script="/etc/init.d/mxn-sensor-ov7670.sh" inputFile="/run/mxn-sensor.in.fifo" outputFile="/run/mxn-sensor.out.fifo" m="3" n="3" disabled="false" />
 
 	<!-- Settings for gamepad TCP server to communicate with Android "TRIK Gamepad" application -->
 	<gamepad port="4444" disabled="false" />
diff --git a/trikControl/config_capture.xml b/trikControl/config_capture.xml
index 000f9b1..b40d3d2 100644
--- a/trikControl/config_capture.xml
+++ b/trikControl/config_capture.xml
@@ -210,7 +210,7 @@ Use it if JCx ports are configured to work as PWM signal capture devices.
 	<objectSensor script="/etc/init.d/object-sensor-ov7670.sh" inputFile="/run/object-sensor.in.fifo" outputFile="/run/object-sensor.out.fifo" toleranceFactor="1.0" disabled="false" />
 
 	<!-- Settings for virtual camera MxN color sensor. It splits field of view of a camera into MxN grid and reports dominant color in each cell of a grid. -->
-	<colorSensor script="/etc/init.d/mxn-sensor-0v7670.sh" inputFile="/run/mxn-sensor.in.fifo" outputFile="/run/mxn-sensor.out.fifo" m="3" n="3" disabled="false" />
+	<colorSensor script="/etc/init.d/mxn-sensor-ov7670.sh" inputFile="/run/mxn-sensor.in.fifo" outputFile="/run/mxn-sensor.out.fifo" m="3" n="3" disabled="false" />
 
 	<!-- Settings for gamepad TCP server to communicate with Android "TRIK Gamepad" application -->
 	<gamepad port="4444" disabled="false" />
diff --git a/trikGui/trikGuiApplication.cpp b/trikGui/trikGuiApplication.cpp
index addf7f1..df6c2ac 100644
--- a/trikGui/trikGuiApplication.cpp
+++ b/trikGui/trikGuiApplication.cpp
@@ -26,22 +26,32 @@
 	#include <QtWidgets/QWidget>
 #endif
 
+#include "backgroundWidget.h"
+
 using namespace trikGui;
 
 TrikGuiApplication::TrikGuiApplication(int &argc, char **argv)
 	: QApplication(argc, argv)
 {
+	mRefreshTimer.setInterval(1000);
+	connect(&mRefreshTimer, SIGNAL(timeout()), this, SLOT(refreshWidgets()));
+	mRefreshTimer.start();
 }
 
 bool TrikGuiApplication::notify(QObject *receiver, QEvent *event)
 {
 	if (event->type() == QEvent::KeyPress) {
-		// Temporary measure for some demo models which do not use QWS to draw their graphics, so we need to update
-		// all GUI to remove clutter on a screen.
-		foreach (QWidget * const widget, QApplication::allWidgets()) {
-			widget->update();
-		}
+		refreshWidgets();
 	}
 
 	return QApplication::notify(receiver, event);
 }
+
+void TrikGuiApplication::refreshWidgets()
+{
+	if (dynamic_cast<BackgroundWidget *>(QApplication::activeWindow())) {
+		for (auto const widget : QApplication::allWidgets()) {
+			widget->update();
+		}
+	}
+}
diff --git a/trikGui/trikGuiApplication.h b/trikGui/trikGuiApplication.h
index dcf9868..3b0a341 100644
--- a/trikGui/trikGuiApplication.h
+++ b/trikGui/trikGuiApplication.h
@@ -18,8 +18,8 @@
 #pragma once
 
 #include <QtCore/qglobal.h>
-#include <QtCore/QHash>
-
+#include <QtCore/QTimer>
+#
 #if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
 	#include <QtGui/QApplication>
 #else
@@ -38,8 +38,15 @@ public:
 	/// Constructor with command-line arguments.
 	TrikGuiApplication(int &argc, char **argv);
 
-	// Override.
-	bool notify(QObject *receiver, QEvent *event);
+	bool notify(QObject *receiver, QEvent *event) override;
+
+private slots:
+	/// Temporary measure for some demo models which do not use QWS to draw their graphics, so we need to update
+	/// all GUI to remove clutter on a screen.
+	void refreshWidgets();
+
+private:
+	QTimer mRefreshTimer;
 };
 
 }
-- 
1.7.10.4

