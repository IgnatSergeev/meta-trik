diff -ruN sphinxbase-0.8.origin/configure.in sphinxbase-0.8/configure.in
--- sphinxbase-0.8.origin/configure.in	2012-12-12 21:28:32.000000000 +0400
+++ sphinxbase-0.8/configure.in	2014-01-27 14:57:20.453391843 +0400
@@ -154,36 +154,19 @@ AC_ARG_ENABLE(debug,
 dnl
 dnl determine audio type or use none if none supported on this platform
 dnl
+
+
+
 case $host in
 	*-*-linux*|*-*-uclinux*|*-*-freebsd*|*-*-netbsd*|*-*-openbsd*)
 		# Check for PulseAudio, JACK, then fallback ALSA, then fall back to OSS
-		AC_CHECK_HEADER(pulse/pulseaudio.h,[
-			AC_DEFINE(AD_BACKEND_PULSEAUDIO, [],
-				 [Use PulseAudio library for sound I/O])
-			ad_files="ad_pulse.lo"
-			ad_backend="AD_BACKEND_PULSEAUDIO"
-			AC_CHECK_LIB(pulse-simple, pa_simple_new)
-			AC_CHECK_LIB(pulse, pa_strerror)
-                        ],[
-                AC_CHECK_HEADER(jack/jack.h,[
-                        AC_DEFINE(AD_BACKEND_JACK, [],
-                                 [Use Jack library for sound I/O])
-                        ad_files="ad_jack.lo"
-                        ad_backend="AD_BACKEND_JACK"
-                        AC_CHECK_LIB(jack, jack_connect)],[
 		AC_CHECK_HEADER(alsa/asoundlib.h,[
 			AC_DEFINE(AD_BACKEND_ALSA, [],
 				 [Use ALSA library for sound I/O])
 			ad_files="ad_alsa.lo"
 			ad_backend="AD_BACKEND_ALSA"
-			AC_CHECK_LIB(asound, snd_pcm_open)],[
-		AC_DEFINE(AD_BACKEND_OSS, [],
-				 [Use OSS for sound I/O])
-			ad_files="ad_oss.lo"
-			ad_backend="AD_BACKEND_OSS"
-			])
-		])
-                ])
+			AC_CHECK_LIB(asound, snd_pcm_open)]
+                )
 		;;
 	*-*-*cygwin*|*-*-*mingw*)
 		ad_files="play_win32.lo rec_win32.lo"
